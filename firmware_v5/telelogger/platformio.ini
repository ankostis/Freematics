; PlatformIO Project Configuration File
;
;   Build options: build flags, source filter
;   Upload options: custom upload port, speed and extra flags
;   Library options: dependencies, extra library storages
;   Advanced options: extra scripting
;
; Please visit documentation for the other options and examples
; https://docs.platformio.org/page/projectconf.html

[env:esp32dev]
platform = https://github.com/platformio/platform-espressif32.git#v4.2.0
platform_packages = platformio/framework-arduinoespressif32 @ https://github.com/espressif/arduino-esp32.git#2.0.3-RC1
board = esp32dev
board_build.f_cpu = 160000000L
framework = arduino
monitor_speed = 115200
build_flags=
    ${env.build_flags}
    ; -DBOARD_HAS_PSRAM -mfix-esp32-psram-cache-issue

[platformio]
src_dir = .
test_dir = ../sandbox

[env]
lib_extra_dirs = ../../libraries
build_flags=
    !python build_flags-git-describe.py      ; Define GIT_DESCRIBE string.
    ; Enable ONLY ONE of the logging-macros below:
    ${arduino_logs.build_flags}     ; Arduino logs give source info, better for local dev
    ; ${esp_idf_logs.build_flags}     ; Re-routable ESP32_IDF logs, eg to MQTT
; monitor_filters = direct    ; to view colored logs, if enabled, below.

;###############
; Log through (simpler) Arduino-core logging-lib (overrides ESP-IDF lib)
;
; * compile-time only
; * Per-file levels with LOG_LOCAL_LEVEL define
; * log-lines prefixed with source-loc (file: lineno) & (optional)
; * Used by `log_X(format, args...)` macros.
; * included yb `esp-hal-log.h`
[arduino_logs]
build_flags=
    -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
    ; -DCONFIG_ARDUHAL_LOG_COLORS

;###############
; Log through ESP-IDF logging-lib
;
; * Reroutable logs
; * Per-TAG levels runtime & compile-timw with LOG_LOCAL_LEVEL define.
; * Used by `ESP_LOGx(tag, format, args...)` macros with TAG-defines per file.
; * included by `esp-log.h`
[esp_idf_logs]
build_flags=
    -DUSE_ESP_IDF_LOG
    ; -DCONFIG_LOG_COLORS
    ; BUG(Arduino-esp32-2.0.3-RC1 due to espressif/arduino-esp32#6534)
    ; Compiler screams if TAG left undefined && on Arduino-logs are enabled
    ; (CORE_DEBUG_LEVEL below is numeric).
    -DTAG='"arduinag"'
    ; NOTE: Arduino log-statements only work when this is numeric
    ; (and not eg ESP_LOG_DEBUG, which has the correct `esp_log_level_t` type),
    ; but if numeric, older IDF-logs may WARN about the type-mismatch.
    -DCORE_DEBUG_LEVEL=ARDUHAL_LOG_LEVEL_INFO
    ; NOTE: The following *build_flags* raise Redefinition errors;
    ; must convert to *"arduino-esp3 as component of esp-idf"*
    ; for `makeconfig` command to modify them in `sdkconfig.defaults`.
    ; (see also espressif/arduino-esp32#893):
    ;   -DCONFIG_LOG_DEFAULT_LEVEL=...
    ;   -DCONFIG_BOOTLOADER_LOG_LEVEL=...
    ;   -DCONFIG_ARDUHAL_LOG_DEFAULT_LEVEL=...
    ;   -DARDUHAL_LOG_LEVEL=...
    ;   -DCONFIG_LOG_MAXIMUM_LEVEL=...
    ;   -DTAG=\#__FILE__    ; default for ARDUINO tags
    ;   -DCONFIG_LOG_TIMESTAMP_SOURCE_SYSTEM
